{"version":3,"sources":["logo.svg","component/chat_interface/chat_interface.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ChatInterface","messages","setMessages","useState","inputValue","setInputValue","React","createElement","className","map","message","key","id","concat","author","text","type","value","onChange","e","target","placeholder","onClick","sendMessage","trim","Date","now","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kJAAAA,EAAOC,QAAU,IAA0B,kC,oIC4C5BC,MAzCOA,KACpB,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAYC,GAAiBF,mBAAS,IAY7C,OACEG,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,eAAc,qBAC7BF,IAAAC,cAAA,OAAKC,UAAU,iBACZP,EAASQ,IAAKC,GACbJ,IAAAC,cAAA,OACEI,IAAKD,EAAQE,GACbJ,UAAS,gBAAAK,OACY,SAAnBH,EAAQI,OAAoB,eAAiB,gBAG9CJ,EAAQK,QAIfT,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACES,KAAK,OACLC,MAAOb,EACPc,SAAWC,GAAMd,EAAcc,EAAEC,OAAOH,OACxCI,YAAY,gCAEdf,IAAAC,cAAA,UAAQe,QAhCMC,KACQ,KAAtBnB,EAAWoB,SAEftB,EAAY,IACPD,EACH,CAAEW,GAAIa,KAAKC,MAAOZ,OAAQ,OAAQC,KAAMX,KAE1CC,EAAc,OAyBoB,cC1BvBsB,MARf,WACE,OACErB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACP,EAAa,QCIL4B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACoB,EAAG,QAORC,M","file":"static/js/main.ae872c41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState } from \"react\";\r\nimport \"./chat_interface.css\";\r\n\r\nconst ChatInterface = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    if (inputValue.trim() === \"\") return;\r\n\r\n    setMessages([\r\n      ...messages,\r\n      { id: Date.now(), author: \"user\", text: inputValue },\r\n    ]);\r\n    setInputValue(\"\"); // Réinitialiser l’input\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">Chatbot Interface</div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message) => (\r\n          <div\r\n            key={message.id}\r\n            className={`chat-message ${\r\n              message.author === \"user\" ? \"user-message\" : \"bot-message\"\r\n            }`}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          placeholder=\"Écrivez votre message...\"\r\n        />\r\n        <button onClick={sendMessage}>Envoyer</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatInterface;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport ChatInterface from './component/chat_interface/chat_interface.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ChatInterface />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}